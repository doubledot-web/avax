/**
 * MIXIN FOR CENTERING
 */
@mixin center($horizontal: true, $vertical: true) {
	position: absolute;
	@if ($horizontal and $vertical) {
		top: 50%;
		left: 50%;
		-webkit-transform: translate(-50%, -50%);
		transform: translate(-50%, -50%);
	} @else if ($horizontal) {
		left: 50%;
		-webkit-transform: translate(-50%, 0);
		transform: translate(-50%, 0);
	} @else if ($vertical) {
		top: 50%;
		-webkit-transform: translate(0, -50%);
		transform: translate(0, -50%);
	}
}

/**
 * MIXIN FOR TYPOGRAPHY
 */
@mixin simple-typ($font-size, $line-height) {
	font-size: $font-size;
	line-height: $line-height;
}

/*TRANSITION LIST*/
$transition-list: color, fill, stroke, background, transform, all;
@each $value in $transition-list {
	.transition-#{$value} {
		transition: $value 0.25s;
	}
}

/*COLOR LIST*/
$color-list: white $white, black $black, darkgray $dark-gray, gray $gray,
	lightgray $light-gray, bggray $bg-gray red $red;
@each $value in $color-list {
	.text-#{nth($value, 1)} {
		color: nth($value, 2);

		&-hover {
			&:hover {
				color: nth($value, 2);
			}
		}
	}

	.stroke-#{nth($value, 1)} {
		stroke: nth($value, 2);
	}

	.fill-#{nth($value, 1)} {
		fill: nth($value, 2);

		&-hover {
			&:hover {
				fill: nth($value, 2);
			}
		}
	}

	.bg-#{nth($value, 1)} {
		background-color: nth($value, 2);

		&-hover {
			&:hover {
				background-color: nth($value, 2);
			}
		}
	}
}

/**
 * MIXINS FOR PLACEHOLDER
 */
@mixin self-placeholder {
	&::-webkit-input-placeholder {
		@content;
	}
	&:-moz-placeholder {
		@content;
	}
	&::-moz-placeholder {
		@content;
	}
	&:-ms-input-placeholder {
		@content;
	}
}

/**
 * MIXIN FOR PLACEHOLDER
 */
@mixin placeholder {
	::-webkit-input-placeholder {
		@content;
	}
	:-moz-placeholder {
		@content;
	}
	::-moz-placeholder {
		@content;
	}
	:-ms-input-placeholder {
		@content;
	}
}

/**
 * MIXIN FOR OPACITY/VISIBILITY
 */
@mixin autoAlpha($opacity: true, $visibility: true) {
	@if ($opacity and $visibility) {
		opacity: 0;
		visibility: hidden;
	} @else if ($opacity) {
		opacity: 0;
		visibility: visible;
	} @else if ($visibility) {
		opacity: 1;
		visibility: hidden;
	} @else {
		opacity: 1;
		visibility: visible;
	}
}

/**
 * MIXIN FOR PADDINGS/MARGINS
 */
$spaceamounts: (5, 15, 30);
$sides: (top, bottom, left, right);

@each $space in $spaceamounts {
	@each $side in $sides {
		.m#{str-slice($side, 0, 1)}-#{$space} {
			margin-#{$side}: #{$space}px;
		}

		.p#{str-slice($side, 0, 1)}-#{$space} {
			padding-#{$side}: #{$space}px;
		}
	}
}

/**
 * MIXIN FOR SCROLLBAR
 */
@mixin c-scrollbar {
	&::-webkit-scrollbar {
		height: 1px;
	}

	&::-webkit-scrollbar-thumb,
	&::-webkit-scrollbar-track {
		border-radius: 3px;
	}

	&::-webkit-scrollbar-thumb {
		background: $gray;
	}

	&::-webkit-scrollbar-track {
		background: yellow;
	}
}

@mixin c-scrollbar-vertical($thumb-color: $blue, $track-color: $light-gray) {
	&::-webkit-scrollbar {
		width: 10px;
	}

	&::-webkit-scrollbar {
		&-thumb {
			background: $thumb-color;
		}

		&-track {
			background: $track-color;
		}

		&-track,
		&-thumb {
			border-radius: 10px;
		}
	}
}

@mixin line-animation($color: $black) {
	& {
		position: relative;

		&::before {
			content: "";
			position: absolute;
			top: 100%;
			left: calc(50% - 22px);
			width: 44px;
			height: 3px;
			background: $color;
			pointer-events: none;
			transform-origin: 100% 50%;
			transform: scale3d(0, 1, 1);
			transition: all 0.3s;
		}

		&:hover {
			text-shadow: 0 0 1px $color, 0 0 1px $color;

			&::before {
				transform-origin: 0% 50%;
				transform: scale3d(1, 1, 1);
			}
		}
	}
}

@mixin line($color: $white) {
	& {
		position: relative;

		&::before {
			content: "";
			position: absolute;
			top: 100%;
			left: 0;
			width: 100%;
			height: 1px;
			background: $color;
		}
	}
}

@mixin line-simple($color: $white) {
	& {
		&::before {
			transform-origin: 0% 50%;
			transform: scale3d(1, 1, 1);
			background: $color;
		}
	}
}
